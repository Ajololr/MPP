using Xunit;

namespace TestProject
{
	public class Tests	{
		[Fact]
		public void FakerCreate()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerCreateInner()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerisValidList()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerSetFields()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerSetProperties()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerIsDto()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerSelectConstructor()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateParams()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerRefreshPlugins()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateInt32()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateInt64()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateFloat()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateChar()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateByte()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateDouble()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateBool()
		{
			Assert.True(false, "autogenerated");
		}
		
		[Fact]
		public void FakerGenerateList()
		{
			Assert.True(false, "autogenerated");
		}
		
	}
}
